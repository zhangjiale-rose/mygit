-- 下载 vc-mysql-sniffer // vc-mysql-sniffer.zip package
-- https://www.vividcortex.com/resources/network-analyzer-for-mysql

-- usage 
cd /usr/local
unzip vc-mysql-sniffer.zip 
cd vc-mysql-sniffer
./vc-mysql-sniffer -h
vc-mysql-sniffer is a utility from VividCortex to monitor query activity and write results to a file.
See --license for the terms governing your usage of this program.

  -binding="[::]:3306"         This is a list of comma separated bind strings as seen in /proc/net/tcp
  -help="false"                Show this usage message
  -help-json="false"           Show this usage message as JSON
  -license="false"             Print the usage terms of this program
  -output=""                   Filepath to output queries to. Defaults to stdout if none specified.
  -show-database="false"       Include a 'USE `database`' for every statement. Supersedes show-database-changes.
  -show-database-changes="true"
                               Include a 'USE `database`' every time the database is changed.
  -verbose="false"             Enable logging on program startup to stderr
  -version="false"             Show version and exit

  Flag                         Current value
--------------------------------------------
  -binding                     "[::]:3306"
  -help                        "true"
  -help-json                   "false"
  -license                     "false"
  -output                      ""
  -show-database               "false"
  -show-database-changes       "true"
  -verbose                     "false"
  -version                     "false"


#测试监控持续30秒，SQL执行情况。
[root@dbserver220 vc-mysql-sniffer]# python analysis-vc-log.py 3307 30 | sort | uniq -c | sort -nr |head -n 10
     15  select * from test.jiale where id> x; 
     12 
     11  show slave status; 
     11  show slave hosts; 
     11  show master status; 
     11  select substring_index(host, ':', 1) as slave_hostname from information_schema.processlist where command in (x) ; 
     11  select @@hostname as instance_alias; 
     11  select @@global.gtid_mode = 'x', @@global.server_uuid, @@global.gtid_purged, @@global.master_info_repository = 'x', @@global.binlog_row_image; 
     11  select data_center from meta.cluster where cluster_name = left(@@hostname,4) ; 
     11  select count(*) > x and max(user_name) != 'x' from mysql.slave_master_info; 

